{"version":3,"file":"cond-CI1KbneT.js","sources":["../src/common/directives/cond.ts"],"sourcesContent":["import { nothing } from \"lit\"\n\n// NOTE: the below generic versions cannot be used until this bug is fixed: https://github.com/runem/lit-analyzer/issues/207\n// since lit-analyzer does not understand the use of nothing\n\n// /**\n//  * if value is truthy, return it, otherwise return nothing\n//  */\n// export function cond<T>(value: T): NonNullable<T> | typeof nothing\n\n// /**\n//  * if condition is truthy, return trueCase, otherwise return nothing\n//  */\n// export function cond<T>(condition: unknown, trueCase: T): T | typeof nothing\n\n// /**\n//  * condition is true, so always return trueCase\n//  */\n// export function cond<T>(condition: true, trueCase: T): T\n\n// /**\n//  * condition is false, to will always return nothing\n//  */\n// export function cond<T>(condition: false, trueCase: T): typeof nothing\n\n// /**\n//  * if condition is truthy, return trueCase, otherwise return falseCase\n//  */\n// export function cond<T, F>(condition: unknown, trueCase: T, falseCase: F): T | F\n\n// /**\n//  * condition is true, so always return trueCase\n//  */\n// export function cond<T, F>(condition: true, trueCase: T, falseCase: F): T\n\n// /**\n//  * condition is false, so always return falseCase\n//  */\n// export function cond<T, F>(condition: false, trueCase: T, falseCase: F): F\n\n/**\n * if value is truthy, return it, otherwise return nothing\n */\nexport function cond(value: any): typeof value | typeof nothing\n\n/**\n * if condition is truthy, return trueCase, otherwise return nothing\n */\nexport function cond(condition: unknown, trueCase: any): typeof trueCase | typeof nothing\n\n/**\n * condition is true, so always return trueCase\n */\nexport function cond(condition: true, trueCase: any): typeof trueCase\n\n/**\n * condition is false, to will always return nothing\n */\nexport function cond(condition: false, trueCase: any): typeof nothing\n\n/**\n * if condition is truthy, return trueCase, otherwise return falseCase\n */\nexport function cond(condition: unknown, trueCase: any, falseCase: any): typeof trueCase | typeof falseCase\n\n/**\n * condition is true, so always return trueCase\n */\nexport function cond(condition: true, trueCase: any, falseCase: any): typeof trueCase\n\n/**\n * condition is false, so always return falseCase\n */\nexport function cond(condition: false, trueCase: any, falseCase: any): typeof falseCase\n\nexport function cond(condition: unknown, trueCase: any = condition, falseCase: any = nothing) {\n  return condition ? trueCase : falseCase\n}\n"],"names":["cond","condition","trueCase","falseCase","nothing"],"mappings":"8BA2EM,SAAUA,EAAKC,EAAoBC,EAAgBD,EAAWE,EAAiBC,GACnF,OAAOH,EAAYC,EAAWC,CAChC"}