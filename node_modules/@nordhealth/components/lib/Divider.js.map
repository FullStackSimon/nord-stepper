{"version":3,"file":"Divider.js","sources":["../src/divider/Divider.ts"],"sourcesContent":["import { LitElement } from \"lit\"\nimport { customElement, property } from \"lit/decorators.js\"\nimport { observe } from \"../common/decorators/observe.js\"\n\nimport componentStyle from \"../common/styles/Component.css\"\nimport style from \"./Divider.css\"\n\n/**\n * Divider components are used to separate and distinguish sections of\n * content or groups of menu items. Visually, they look like\n * horizontal or vertical lines.\n *\n * @status ready\n * @category structure\n *\n * @cssprop [--n-divider-color=var(--n-color-border)] - Controls the color of the divider, using our [color tokens](/tokens/#color).\n * @cssprop [--n-divider-size=1px] - Controls the size, or thickness, of the divider.\n */\n@customElement(\"nord-divider\")\nexport default class Divider extends LitElement {\n  static styles = [componentStyle, style]\n\n  /**\n   * The direction of the divider.\n   */\n  @property({ reflect: true }) direction: \"vertical\" | \"horizontal\" = \"horizontal\"\n\n  firstUpdated() {\n    this.setAttribute(\"role\", \"separator\")\n  }\n\n  @observe(\"direction\")\n  private handleDirectionChange() {\n    this.setAttribute(\"aria-orientation\", this.direction === \"vertical\" ? \"vertical\" : \"horizontal\")\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"nord-divider\": Divider\n  }\n}\n"],"names":["Divider","LitElement","constructor","this","direction","firstUpdated","setAttribute","handleDirectionChange","styles","componentStyle","style","__decorate","property","reflect","prototype","observe","customElement"],"mappings":"8mBAmBe,IAAMA,EAAN,cAAsBC,EAAtB,WAAAC,uBAMgBC,KAASC,UAA8B,YAUrE,CARC,YAAAC,GACEF,KAAKG,aAAa,OAAQ,YAC3B,CAGO,qBAAAC,GACNJ,KAAKG,aAAa,mBAAuC,aAAnBH,KAAKC,UAA2B,WAAa,aACpF,GAdMJ,EAAAQ,OAAS,CAACC,EAAgBC,GAKJC,EAAA,CAA5BC,EAAS,CAAEC,SAAS,KAA2Db,EAAAc,UAAA,iBAAA,GAOxEH,EAAA,CADPI,EAAQ,cAGRf,EAAAc,UAAA,wBAAA,MAfkBd,EAAOW,EAAA,CAD3BK,EAAc,iBACMhB,SAAAA"}