{"version":3,"file":"fsm-Bq5jMQrK.js","sources":["../src/common/fsm.ts"],"sourcesContent":["type EventsFromTransitions<T> = { [Prop in keyof T]: keyof T[Prop] }[keyof T]\n\nexport function fsm<\n  TTransitions extends Record<TStates, Partial<Record<TEvents, TStates>>>,\n  TStates extends keyof TTransitions,\n  TEvents extends EventsFromTransitions<TTransitions>,\n>(config: TTransitions) {\n  return {\n    transition(currentState: TStates, event: TEvents) {\n      const nextState = config[currentState][event] as TStates\n      return nextState || currentState\n    },\n  }\n}\n\nexport type Machine = ReturnType<typeof fsm>\n\nexport type States<T extends Machine | Machine[\"transition\"]> = T extends Machine\n  ? Parameters<T[\"transition\"]>[0]\n  : T extends Machine[\"transition\"]\n    ? Parameters<T>[0]\n    : never\n\nexport type Events<T extends Machine | Machine[\"transition\"]> = T extends Machine\n  ? Parameters<T[\"transition\"]>[1]\n  : T extends Machine[\"transition\"]\n    ? Parameters<T>[1]\n    : never\n"],"names":["fsm","config","transition","currentState","event"],"mappings":"AAEM,SAAUA,EAIdC,GACA,MAAO,CACLC,WAAU,CAACC,EAAuBC,IACdH,EAAOE,GAAcC,IACnBD,EAG1B"}