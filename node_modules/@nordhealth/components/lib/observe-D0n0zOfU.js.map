{"version":3,"file":"observe-D0n0zOfU.js","sources":["../src/common/decorators/observe.ts"],"sourcesContent":["import { ReactiveController, ReactiveElement } from \"lit\"\n\ntype ObserveFunction = (oldValue: any, newValue: any, name: PropertyKey) => void\ntype ObserveLifecycle = \"update\" | \"updated\"\n\nclass PropertyObserverController<T extends ReactiveElement, TKey extends keyof T> implements ReactiveController {\n  private _value?: T[TKey]\n\n  constructor(\n    private host: T,\n    private key: TKey,\n    private cb: ObserveFunction,\n    private lifecycle: ObserveLifecycle\n  ) {\n    host.addController(this)\n  }\n\n  hostUpdate() {\n    if (this.lifecycle === \"update\") {\n      this.handle()\n    }\n  }\n\n  hostUpdated() {\n    if (this.lifecycle === \"updated\") {\n      this.handle()\n    }\n  }\n\n  private handle() {\n    const { key, _value, host } = this\n    const newValue = host[key]\n\n    if (_value !== newValue) {\n      this._value = newValue\n      this.cb.call(host, _value, newValue, key)\n    }\n  }\n}\n\nexport function observe(propertyName: string, lifecycle: ObserveLifecycle = \"update\") {\n  return function decorator(target: any, methodName: string) {\n    const proto = target.constructor as typeof ReactiveElement\n\n    proto.addInitializer(el => {\n      type Key = keyof typeof el\n      const cb = el[methodName as Key] as ObserveFunction\n\n      // since we can't get strong typing here, we can add a runtime check\n      // this will get stripped out in prod, and should only ever happen in dev anyway\n      if (process.env.NODE_ENV === \"development\") {\n        if (!(propertyName in el)) {\n          throw new TypeError(\n            `@observe: property '${propertyName}' does not exist.\\nPossible properties: ${Object.keys(target)\n              .map(p => `'${p}'`)\n              .join(\", \")}`\n          )\n        }\n      }\n\n      el.addController(new PropertyObserverController(el, propertyName as Key, cb, lifecycle))\n    })\n  }\n}\n"],"names":["PropertyObserverController","constructor","host","key","cb","lifecycle","this","addController","hostUpdate","handle","hostUpdated","_value","newValue","call","observe","propertyName","target","methodName","addInitializer","el"],"mappings":"AAKA,MAAMA,EAGJ,WAAAC,CACUC,EACAC,EACAC,EACAC,GAHAC,KAAIJ,KAAJA,EACAI,KAAGH,IAAHA,EACAG,KAAEF,GAAFA,EACAE,KAASD,UAATA,EAERH,EAAKK,cAAcD,KACpB,CAED,UAAAE,GACyB,WAAnBF,KAAKD,WACPC,KAAKG,QAER,CAED,WAAAC,GACyB,YAAnBJ,KAAKD,WACPC,KAAKG,QAER,CAEO,MAAAA,GACN,MAAMN,IAAEA,EAAGQ,OAAEA,EAAMT,KAAEA,GAASI,KACxBM,EAAWV,EAAKC,GAElBQ,IAAWC,IACbN,KAAKK,OAASC,EACdN,KAAKF,GAAGS,KAAKX,EAAMS,EAAQC,EAAUT,GAExC,WAGaW,EAAQC,EAAsBV,EAA8B,UAC1E,OAAO,SAAmBW,EAAaC,GACvBD,EAAOf,YAEfiB,gBAAeC,IAEnB,MAAMf,EAAKe,EAAGF,GAcdE,EAAGZ,cAAc,IAAIP,EAA2BmB,EAAIJ,EAAqBX,EAAIC,GAAW,GAE5F,CACF"}