{"version":3,"file":"CommandMenu.js","sources":["../../icons/lib/assets/keyboard-arrow-up-down.js","../../icons/lib/assets/keyboard-return.js","../../icons/lib/assets/keyboard-backspace.js","../src/common/focus.ts","../src/command-menu/CommandMenu.ts"],"sourcesContent":["export default '<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m8.29008 12.3413 1.41 1.42-3.96 3.95c-.2.19-.45.29-.71.29s-.51-.1-.71-.29l-3.990002-4 1.410002-1.42 2.26 2.25v-12.54002h2v12.63002zm11.38002-6.05002-4.01-4c-.39-.39-1.02-.39-1.41 0l-3.96 3.95 1.41 1.42 2.29-2.29v12.63002h2v-12.54002l2.26 2.25 1.41-1.42z\" fill=\"currentColor\"/></svg>'\nexport const title = \"keyboard-arrow-up-down\"\nexport const tags = \"nordicon keyboard keys arrow up down shortcut\"\n","export default '<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m18.0025 4v8c0 1.1-.9 2-2 2h-12.59l3 3-1.41 1.41-4.71-4.7c-.39-.39-.39-1.02 0-1.41l4.71-4.71 1.41 1.41-3 3h12.59v-8h-4v-2h4c1.1 0 2 .9 2 2z\" fill=\"currentColor\"/></svg>'\nexport const title = \"keyboard-return\"\nexport const tags = \"nordicon keyboard return key shortcut\"\n","export default '<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m18 2h-10.54c-.58 0-1.14.25-1.52.7l-5.14 6c-.65.75-.65 1.85 0 2.6l5.14 6c.38.44.93.7 1.52.7h10.54c1.1 0 2-.9 2-2v-12c0-1.1-.9-2-2-2zm0 14h-10.54l-5.14-6 5.14-6h10.54zm-9.54-3.88 2.12-2.12-2.12-2.12 1.41-1.41 2.12 2.12 2.12-2.12 1.41 1.41-2.12 2.12 2.12 2.12-1.41 1.41-2.12-2.12-2.12 2.12z\" fill=\"currentColor\"/></svg>'\nexport const title = \"keyboard-backspace\"\nexport const tags = \"nordicon keyboard backspace back delete key shortcut\"\n","/**\n * Gets the currently focused element, taking shadow roots into account.\n */\nexport function getFocusedElement(root: Document | ShadowRoot): Element | undefined {\n  if (root.activeElement?.shadowRoot) {\n    return getFocusedElement(root.activeElement.shadowRoot)\n  }\n\n  return root.activeElement || undefined\n}\n","import { LitElement, html, nothing } from \"lit\"\nimport { customElement, property, state } from \"lit/decorators.js\"\nimport { repeat } from \"lit/directives/repeat.js\"\nimport { createRef, ref } from \"lit/directives/ref.js\"\nimport { classMap } from \"lit/directives/class-map.js\"\nimport { ifDefined } from \"lit/directives/if-defined.js\"\n\nimport * as navigateIcon from \"@nordhealth/icons/lib/assets/keyboard-arrow-up-down.js\"\nimport * as enterIcon from \"@nordhealth/icons/lib/assets/keyboard-return.js\"\nimport * as backspaceIcon from \"@nordhealth/icons/lib/assets/keyboard-backspace.js\"\n\nimport { groupBy } from \"../common/collection.js\"\nimport { wrap } from \"../common/number.js\"\nimport { NordEvent } from \"../common/events.js\"\nimport { getFocusedElement } from \"../common/focus.js\"\nimport { LightDismissController } from \"../common/controllers/LightDismissController.js\"\nimport { KeyboardController } from \"./KeyboardController.js\"\n\nimport Icon from \"../icon/Icon.js\"\nimport \"../visually-hidden/VisuallyHidden.js\"\nimport \"./CommandMenuAction.js\"\nimport { ICommandMenuAction } from \"./ICommandMenuAction.js\"\nimport { SelectEvent } from \"./SelectEvent.js\"\nimport componentStyle from \"../common/styles/Component.css\"\nimport style from \"./CommandMenu.css\"\nimport { LocalizeController } from \"../localization/LocalizeController.js\"\nimport { cond } from \"../common/directives/cond.js\"\nimport { observe } from \"../common/decorators/observe.js\"\n\nIcon.registerIcon(navigateIcon)\nIcon.registerIcon(enterIcon)\nIcon.registerIcon(backspaceIcon)\n\n/**\n * Command Menu allows users to navigate and use an app without\n * touching the mouse and helps them transform into “power users”\n * who can harness more advanced features far faster.\n *\n * @status ready\n * @category action\n * @slot footer - Used to replace the default footer contents.\n * @fires open - The command menu was opened.\n * @fires close - The command menu was closed.\n * @fires {SelectEvent} nord-select - User selected a command from the menu.\n *\n * @cssprop [--n-command-menu-inline-size=640px] - Controls the max inline size, or width, of the command menu.\n * @cssprop [--n-command-menu-block-size=290px] - Controls the max block size, or height, of the command menu.\n * @cssprop [--n-command-menu-block-start=16%] - Controls the command menu offset from the block start, or top, of the screen.\n *\n * @localization instructions - Instructions that offer guidance on how to use the command menu.\n * @localization inputLabel - Accessible label given to the command menu's input.\n * @localization footerArrowKeys - Describes what the arrow keys do.\n * @localization footerEnterKey - Describes what the enter key does.\n * @localization footerEscapeKey - Describes what the escape key does.\n * @localization footerBackspaceKey - Describes what the backspace key does.\n * @localization noResults - A message shown when there are no matching results.\n * @localization tip - A hint tip that describes some approaches to find a command when there are no matching results.\n * @localization placeholder - Hint text to display in the Command Menu search field.\n */\n@customElement(\"nord-command-menu\")\nexport default class CommandMenu extends LitElement {\n  static styles = [componentStyle, style]\n\n  private inputRef = createRef<HTMLInputElement>()\n  private listRef = createRef<HTMLElement>()\n  private previousFocus?: HTMLElement\n\n  private localize = new LocalizeController<\"nord-command-menu\">(this)\n  private dismissController = new LightDismissController(this, {\n    isOpen: () => this.open,\n    onDismiss: () => this.close(),\n  })\n\n  private keyboardController = new KeyboardController(this, {\n    trigger: () => this.select(),\n    goBack: () => this.goBack(),\n    end: () => this.end(),\n    start: () => this.start(),\n    next: () => this.next(),\n    previous: () => this.previous(),\n    toggleOpen: () => this.toggleOpen(),\n  })\n\n  /**\n   * Show or hide the command menu.\n   */\n  @property({ reflect: true, type: Boolean }) open = false\n\n  /**\n   * Array of commands to be included in the menu.\n   * Please see “Commands data” section for more documentation.\n   */\n  @property({ type: Array, attribute: false }) commands: Array<ICommandMenuAction> = []\n\n  @state() private parent: ICommandMenuAction[\"parent\"]\n  @state() private search: string = \"\"\n  @state() private bump = true\n  @state() private selectedIndex = 0\n  @state() private filteredCommands: Array<ICommandMenuAction> = []\n\n  private get selected(): ICommandMenuAction {\n    return this.filteredCommands[this.selectedIndex]\n  }\n\n  /**\n   * Show the command menu programmatically.\n   * @param options allows you to open the menu filtered to a specific parent command.\n   */\n  show(options: { parent?: string } = {}) {\n    const notCancelled = this.dispatchEvent(new NordEvent(\"open\", { cancelable: true }))\n\n    if (notCancelled) {\n      this.open = true\n      this.setParent(options.parent)\n    }\n  }\n\n  /**\n   * Close the command menu programmatically.\n   */\n  close() {\n    this.open = false\n    this.previousFocus?.focus()\n    this.previousFocus = undefined\n\n    this.dispatchEvent(new NordEvent(\"close\"))\n  }\n\n  /**\n   * Toggle the open state programmatically.\n   */\n  toggleOpen() {\n    if (this.open) {\n      this.close()\n    } else {\n      this.show()\n    }\n  }\n\n  /**\n   * Focus the command menu's input.\n   */\n  focus() {\n    this.inputRef.value?.focus()\n  }\n\n  override render() {\n    const sections = groupBy(this.filteredCommands, \"section\")\n    const activeDescendant = this.filteredCommands.length === 0 ? \"no-results\" : this.selected?.id\n\n    return html`\n      <div\n        class=${classMap({\n          \"n-visible\": this.open,\n          \"n-modal\": true,\n        })}\n      >\n        <div\n          @animationend=${this.handleAnimationEnd}\n          class=${classMap({\n            \"n-bump\": this.bump,\n            \"n-modal-content\": true,\n          })}\n        >\n          <div class=\"n-search-wrapper\">\n            <nord-visually-hidden id=\"instructions\">${this.localize.term(\"instructions\")}</nord-visually-hidden>\n            <input\n              type=\"text\"\n              id=\"search\"\n              @input=${this.handleInput}\n              @blur=${this.handleBlur}\n              ${ref(this.inputRef)}\n              placeholder=${this.localize.term(\"placeholder\")}\n              .value=${this.search}\n              spellcheck=\"false\"\n              autocomplete=\"off\"\n              autocapitalize=\"off\"\n              aria-label=${this.localize.term(\"inputLabel\")}\n              aria-autocomplete=\"list\"\n              aria-haspopup=\"listbox\"\n              role=\"combobox\"\n              aria-controls=\"list\"\n              aria-expanded=\"true\"\n              aria-activedescendant=${ifDefined(activeDescendant)}\n              aria-describedby=\"instructions\"\n            />\n          </div>\n\n          <div class=\"n-modal-body\">\n            <div id=\"list\" ${ref(this.listRef)} role=\"listbox\" aria-label=${this.localize.term(\"inputLabel\")}>\n              ${this.filteredCommands.length === 0\n                ? this.renderNoResults()\n                : Array.from(sections, ([section, commands]) => this.renderSection(section, commands))}\n            </div>\n          </div>\n          <slot name=\"footer\">\n            <div class=\"n-modal-footer\">\n              <span class=\"n-help\">\n                <nord-icon label=\"Arrow keys\" name=${navigateIcon.title}></nord-icon>\n                ${this.localize.term(\"footerArrowKeys\")}\n              </span>\n              <span class=\"n-help\">\n                <nord-icon label=\"Enter key\" name=${enterIcon.title}></nord-icon>\n                ${this.localize.term(\"footerEnterKey\")}\n              </span>\n              <span class=\"n-help\">${this.localize.term(\"footerEscapeKey\")}</span>\n              <span class=\"n-help n-backspace\">\n                <nord-icon label=\"Backspace key\" name=${backspaceIcon.title}></nord-icon>\n                ${this.localize.term(\"footerBackspaceKey\")}\n              </span>\n            </div>\n          </slot>\n        </div>\n      </div>\n    `\n  }\n\n  private renderNoResults() {\n    return html`\n      <div id=\"no-results\" class=\"n-command-empty\" role=\"option\" aria-selected=\"true\">\n        <div class=\"n-title\">${this.localize.term(\"noResults\", this.search)}</div>\n        <div class=\"n-tip\">${this.localize.term(\"tip\")}</div>\n      </div>\n    `\n  }\n\n  private renderSection(section: string | undefined, commands: ICommandMenuAction[]) {\n    const sectionId = `section-${section}`\n\n    // TODO: test on latest safari, since it seems to have issues with grouped options\n    return html`\n      <div role=\"group\" aria-labelledby=${cond(section, sectionId)}>\n        ${section ? html`<div class=\"n-group-header\" role=\"presentation\" id=${sectionId}>${section}</div>` : nothing}\n        ${repeat(\n          commands,\n          command => command.id,\n          command => html`\n            <nord-command-menu-action\n              id=${command.id}\n              .command=${command}\n              ?selected=${this.open && command.id === this.selected?.id}\n              @click=${() => this.select(command)}\n              role=\"option\"\n              aria-selected=${cond(command.id === this.selected?.id, \"true\")}\n            ></nord-command-menu-action>\n          `\n        )}\n      </div>\n    `\n  }\n\n  @observe(\"commands\")\n  protected handleCommandsChange() {\n    this.keyboardController.registerCommandShortcuts()\n  }\n\n  @observe(\"open\")\n  protected handleBump() {\n    if (this.open) {\n      this.bump = true\n    }\n  }\n\n  @observe(\"open\", \"updated\")\n  protected focusOnOpen() {\n    if (this.open) {\n      this.previousFocus = getFocusedElement(document) as HTMLElement\n      this.focus()\n\n      if (this.listRef.value) {\n        this.listRef.value.scrollTop = 0\n      }\n    }\n  }\n\n  private handleAnimationEnd() {\n    this.bump = false\n  }\n\n  private handleBlur() {\n    if (this.open) {\n      this.focus()\n    }\n  }\n\n  private handleInput(event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement\n    this.setSearch(input.value)\n  }\n\n  private select(command: ICommandMenuAction = this.selected) {\n    const isParent = this.commands.some(item => item.parent === command.id)\n\n    if (isParent) {\n      this.setParent(command.id)\n      this.bump = true\n      this.focus()\n    } else {\n      this.close()\n    }\n\n    this.setSearch(\"\")\n    command.handler?.(this)\n\n    // this is separated into two parts because of a bug in Custom Elements Analyzer, where it gets the event name wrong.\n    // TODO: cleanup when bug is fixed.\n    const event = new SelectEvent(command)\n    this.dispatchEvent(event)\n  }\n\n  private start() {\n    this.selectedIndex = 0\n  }\n\n  private end() {\n    this.selectedIndex = this.filteredCommands.length - 1\n  }\n\n  private next() {\n    this.selectedIndex = wrap(this.selectedIndex + 1, 0, this.filteredCommands.length - 1)\n  }\n\n  private previous() {\n    this.selectedIndex = wrap(this.selectedIndex - 1, 0, this.filteredCommands.length - 1)\n  }\n\n  private goBack() {\n    if (this.search) {\n      return\n    }\n\n    if (this.parent) {\n      const parentCommand = this.commands.find(command => command.id === this.parent)\n      this.setParent(parentCommand?.parent)\n    }\n  }\n\n  private setParent(parent?: ICommandMenuAction[\"parent\"]) {\n    this.parent = parent\n    this.setSearch(\"\")\n  }\n\n  private setSearch(str: string) {\n    this.search = str\n    this.selectedIndex = 0\n  }\n\n  @observe(\"search\")\n  @observe(\"parent\")\n  @observe(\"commands\")\n  private filterCommands() {\n    const searchTerms = this.search.toLocaleLowerCase().split(/\\s+/)\n\n    // sort commands in the same way as they are visually displayed\n    // this is a quick fix for cases where the visual order of commands is different from order in the commands array\n    // without ordering, the up/down arrow keys can end up navigating out of visual order.\n    // but it feels wasteful to groupBy here, then discard the result, only to re-calculate in render.\n    // TODO: is there a way to do this without grouping twice?\n    const groupedBySection = groupBy(this.commands, \"section\")\n    const ordered = [...groupedBySection.values()].flat()\n\n    this.filteredCommands = ordered.filter(({ title, keywords = \"\", parent }) => {\n      const searchSpace = `${title} ${keywords}`.toLocaleLowerCase()\n      const matcher = searchTerms.every(term => searchSpace.includes(term))\n\n      if (!this.parent && this.search) {\n        // global search for items on root\n        return matcher\n      }\n\n      // use looser equality check so that it handles `null` as command's `parent` value\n      // eslint-disable-next-line eqeqeq\n      return parent == this.parent && matcher\n    })\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"nord-command-menu\": CommandMenu\n  }\n}\n"],"names":["title","getFocusedElement","root","activeElement","_a","shadowRoot","undefined","Icon","registerIcon","navigateIcon","enterIcon","backspaceIcon","CommandMenu","LitElement","constructor","this","inputRef","createRef","listRef","localize","LocalizeController","dismissController","LightDismissController","isOpen","open","onDismiss","close","keyboardController","KeyboardController","trigger","select","goBack","end","start","next","previous","toggleOpen","commands","search","bump","selectedIndex","filteredCommands","selected","show","options","dispatchEvent","NordEvent","cancelable","setParent","parent","previousFocus","focus","value","render","sections","groupBy","activeDescendant","length","id","html","classMap","handleAnimationEnd","term","handleInput","handleBlur","ref","ifDefined","renderNoResults","Array","from","section","renderSection","navigateIcon.title","enterIcon.title","backspaceIcon.title","sectionId","cond","nothing","repeat","command","_b","handleCommandsChange","registerCommandShortcuts","handleBump","focusOnOpen","document","scrollTop","event","input","target","setSearch","some","item","handler","call","SelectEvent","wrap","parentCommand","find","str","filterCommands","searchTerms","toLocaleLowerCase","split","ordered","values","flat","filter","keywords","searchSpace","matcher","every","includes","styles","componentStyle","style","__decorate","property","reflect","type","Boolean","prototype","attribute","state","observe","customElement"],"mappings":"m8CACO,MAAMA,EAAQ,qEADN,uWAEK,0DCDb,MAAMA,EAAQ,8DADN,qPAEK,kDCDb,MAAMA,EAAQ,iEADN,0YAEK,iECCd,SAAUC,EAAkBC,SAChC,OAAwB,UAApBA,EAAKC,qBAAe,IAAAC,OAAA,EAAAA,EAAAC,YACfJ,EAAkBC,EAAKC,cAAcE,YAGvCH,EAAKC,oBAAiBG,CAC/B,kiGCoBAC,EAAKC,aAAaC,GAClBF,EAAKC,aAAaE,GAClBH,EAAKC,aAAaG,GA6BH,IAAMC,EAAN,cAA0BC,EAA1B,WAAAC,uBAGLC,KAAQC,SAAGC,IACXF,KAAOG,QAAGD,IAGVF,KAAAI,SAAW,IAAIC,EAAwCL,MACvDA,KAAAM,kBAAoB,IAAIC,EAAuBP,KAAM,CAC3DQ,OAAQ,IAAMR,KAAKS,KACnBC,UAAW,IAAMV,KAAKW,UAGhBX,KAAAY,mBAAqB,IAAIC,EAAmBb,KAAM,CACxDc,QAAS,IAAMd,KAAKe,SACpBC,OAAQ,IAAMhB,KAAKgB,SACnBC,IAAK,IAAMjB,KAAKiB,MAChBC,MAAO,IAAMlB,KAAKkB,QAClBC,KAAM,IAAMnB,KAAKmB,OACjBC,SAAU,IAAMpB,KAAKoB,WACrBC,WAAY,IAAMrB,KAAKqB,eAMmBrB,KAAIS,MAAG,EAMNT,KAAQsB,SAA8B,GAGlEtB,KAAMuB,OAAW,GACjBvB,KAAIwB,MAAG,EACPxB,KAAayB,cAAG,EAChBzB,KAAgB0B,iBAA8B,EAqRhE,CAnRC,YAAYC,GACV,OAAO3B,KAAK0B,iBAAiB1B,KAAKyB,cACnC,CAMD,IAAAG,CAAKC,EAA+B,IACb7B,KAAK8B,cAAc,IAAIC,EAAU,OAAQ,CAAEC,YAAY,OAG1EhC,KAAKS,MAAO,EACZT,KAAKiC,UAAUJ,EAAQK,QAE1B,CAKD,KAAAvB,SACEX,KAAKS,MAAO,EACQ,QAApBpB,EAAAW,KAAKmC,qBAAe,IAAA9C,GAAAA,EAAA+C,QACpBpC,KAAKmC,mBAAgB5C,EAErBS,KAAK8B,cAAc,IAAIC,EAAU,SAClC,CAKD,UAAAV,GACMrB,KAAKS,KACPT,KAAKW,QAELX,KAAK4B,MAER,CAKD,KAAAQ,SACuB,QAArB/C,EAAAW,KAAKC,SAASoC,aAAO,IAAAhD,GAAAA,EAAA+C,OACtB,CAEQ,MAAAE,SACP,MAAMC,EAAWC,EAAQxC,KAAK0B,iBAAkB,WAC1Ce,EAAoD,IAAjCzC,KAAK0B,iBAAiBgB,OAAe,aAA8B,QAAfrD,EAAAW,KAAK2B,gBAAU,IAAAtC,OAAA,EAAAA,EAAAsD,GAE5F,OAAOC,CAAI,eAECC,EAAS,CACf,YAAa7C,KAAKS,KAClB,WAAW,4BAIKT,KAAK8C,8BACbD,EAAS,CACf,SAAU7C,KAAKwB,KACf,mBAAmB,8EAIuBxB,KAAKI,SAAS2C,KAAK,gFAIlD/C,KAAKgD,uBACNhD,KAAKiD,eACXC,EAAIlD,KAAKC,0BACGD,KAAKI,SAAS2C,KAAK,2BACxB/C,KAAKuB,kFAIDvB,KAAKI,SAAS2C,KAAK,oJAMRI,EAAUV,sFAMnBS,EAAIlD,KAAKG,uCAAsCH,KAAKI,SAAS2C,KAAK,kBAC9C,IAAjC/C,KAAK0B,iBAAiBgB,OACpB1C,KAAKoD,kBACLC,MAAMC,KAAKf,GAAU,EAAEgB,EAASjC,KAActB,KAAKwD,cAAcD,EAASjC,4HAMvCmC,kBACnCzD,KAAKI,SAAS2C,KAAK,qFAGeW,kBAClC1D,KAAKI,SAAS2C,KAAK,iDAEA/C,KAAKI,SAAS2C,KAAK,qGAEAY,kBACtC3D,KAAKI,SAAS2C,KAAK,uDAOlC,CAEO,eAAAK,GACN,OAAOR,CAAI,wGAEgB5C,KAAKI,SAAS2C,KAAK,YAAa/C,KAAKuB,mCACvCvB,KAAKI,SAAS2C,KAAK,oBAG7C,CAEO,aAAAS,CAAcD,EAA6BjC,GACjD,MAAMsC,EAAY,WAAWL,IAG7B,OAAOX,CAAI,sCAC2BiB,EAAKN,EAASK,OAC9CL,EAAUX,CAAI,uDAAsDgB,MAAaL,UAAkBO,KACnGC,EACAzC,GACA0C,GAAWA,EAAQrB,KACnBqB,YAAW,OAAApB,CAAI,iCAENoB,EAAQrB,iBACFqB,iBACChE,KAAKS,MAAQuD,EAAQrB,MAAoB,QAAbtD,EAAAW,KAAK2B,gBAAQ,IAAAtC,OAAA,EAAAA,EAAEsD,gBAC9C,IAAM3C,KAAKe,OAAOiD,oCAEXH,EAAKG,EAAQrB,MAAsB,QAAfsB,EAAAjE,KAAK2B,gBAAU,IAAAsC,OAAA,EAAAA,EAAAtB,IAAI,sCAE1D,WAIR,CAGS,oBAAAuB,GACRlE,KAAKY,mBAAmBuD,0BACzB,CAGS,UAAAC,GACJpE,KAAKS,OACPT,KAAKwB,MAAO,EAEf,CAGS,WAAA6C,GACJrE,KAAKS,OACPT,KAAKmC,cAAgBjD,EAAkBoF,UACvCtE,KAAKoC,QAEDpC,KAAKG,QAAQkC,QACfrC,KAAKG,QAAQkC,MAAMkC,UAAY,GAGpC,CAEO,kBAAAzB,GACN9C,KAAKwB,MAAO,CACb,CAEO,UAAAyB,GACFjD,KAAKS,MACPT,KAAKoC,OAER,CAEO,WAAAY,CAAYwB,GAClB,MAAMC,EAAQD,EAAME,OACpB1E,KAAK2E,UAAUF,EAAMpC,MACtB,CAEO,MAAAtB,CAAOiD,EAA8BhE,KAAK2B,gBAC/B3B,KAAKsB,SAASsD,MAAKC,GAAQA,EAAK3C,SAAW8B,EAAQrB,MAGlE3C,KAAKiC,UAAU+B,EAAQrB,IACvB3C,KAAKwB,MAAO,EACZxB,KAAKoC,SAELpC,KAAKW,QAGPX,KAAK2E,UAAU,IACG,QAAlBtF,EAAA2E,EAAQc,eAAU,IAAAzF,GAAAA,EAAA0F,KAAAf,EAAAhE,MAIlB,MAAMwE,EAAQ,IAAIQ,EAAYhB,GAC9BhE,KAAK8B,cAAc0C,EACpB,CAEO,KAAAtD,GACNlB,KAAKyB,cAAgB,CACtB,CAEO,GAAAR,GACNjB,KAAKyB,cAAgBzB,KAAK0B,iBAAiBgB,OAAS,CACrD,CAEO,IAAAvB,GACNnB,KAAKyB,cAAgBwD,EAAKjF,KAAKyB,cAAgB,EAAG,EAAGzB,KAAK0B,iBAAiBgB,OAAS,EACrF,CAEO,QAAAtB,GACNpB,KAAKyB,cAAgBwD,EAAKjF,KAAKyB,cAAgB,EAAG,EAAGzB,KAAK0B,iBAAiBgB,OAAS,EACrF,CAEO,MAAA1B,GACN,IAAIhB,KAAKuB,QAILvB,KAAKkC,OAAQ,CACf,MAAMgD,EAAgBlF,KAAKsB,SAAS6D,MAAKnB,GAAWA,EAAQrB,KAAO3C,KAAKkC,SACxElC,KAAKiC,UAAUiD,aAAa,EAAbA,EAAehD,OAC/B,CACF,CAEO,SAAAD,CAAUC,GAChBlC,KAAKkC,OAASA,EACdlC,KAAK2E,UAAU,GAChB,CAEO,SAAAA,CAAUS,GAChBpF,KAAKuB,OAAS6D,EACdpF,KAAKyB,cAAgB,CACtB,CAKO,cAAA4D,GACN,MAAMC,EAActF,KAAKuB,OAAOgE,oBAAoBC,MAAM,OAQpDC,EAAU,IADSjD,EAAQxC,KAAKsB,SAAU,WACXoE,UAAUC,OAE/C3F,KAAK0B,iBAAmB+D,EAAQG,QAAO,EAAG3G,QAAO4G,WAAW,GAAI3D,aAC9D,MAAM4D,EAAc,GAAG7G,KAAS4G,IAAWN,oBACrCQ,EAAUT,EAAYU,OAAMjD,GAAQ+C,EAAYG,SAASlD,KAE/D,QAAK/C,KAAKkC,QAAUlC,KAAKuB,QAOlBW,GAAUlC,KAAKkC,SALb6D,CAK8B,GAE1C,GAzTMlG,EAAAqG,OAAS,CAACC,EAAgBC,GAyBWC,EAAA,CAA3CC,EAAS,CAAEC,SAAS,EAAMC,KAAMC,WAAuB5G,EAAA6G,UAAA,YAAA,GAMXL,EAAA,CAA5CC,EAAS,CAAEE,KAAMnD,MAAOsD,WAAW,KAAiD9G,EAAA6G,UAAA,gBAAA,GAEpEL,EAAA,CAAhBO,KAAoD/G,EAAA6G,UAAA,cAAA,GACpCL,EAAA,CAAhBO,KAAmC/G,EAAA6G,UAAA,cAAA,GACnBL,EAAA,CAAhBO,KAA2B/G,EAAA6G,UAAA,YAAA,GACXL,EAAA,CAAhBO,KAAiC/G,EAAA6G,UAAA,qBAAA,GACjBL,EAAA,CAAhBO,KAAgE/G,EAAA6G,UAAA,wBAAA,GA0JvDL,EAAA,CADTQ,EAAQ,aAGRhH,EAAA6G,UAAA,uBAAA,MAGSL,EAAA,CADTQ,EAAQ,SAKRhH,EAAA6G,UAAA,aAAA,MAGSL,EAAA,CADTQ,EAAQ,OAAQ,YAUhBhH,EAAA6G,UAAA,cAAA,MA6EOL,EAAA,CAHPQ,EAAQ,UACRA,EAAQ,UACRA,EAAQ,aAyBRhH,EAAA6G,UAAA,iBAAA,MA1TkB7G,EAAWwG,EAAA,CAD/BS,EAAc,sBACMjH,SAAAA"}