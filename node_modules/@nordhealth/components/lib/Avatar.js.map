{"version":3,"file":"Avatar.js","sources":["../src/avatar/Avatar.ts"],"sourcesContent":["import { LitElement, html, nothing } from \"lit\"\nimport { customElement, property, state } from \"lit/decorators.js\"\n\nimport componentStyle from \"../common/styles/Component.css\"\nimport style from \"./Avatar.css\"\nimport { fsm, States } from \"../common/fsm.js\"\nimport { observe } from \"../common/decorators/observe.js\"\nimport \"../visually-hidden/VisuallyHidden.js\"\nimport \"../icon/Icon.js\"\n\nconst { transition } = fsm({\n  initial: {\n    \"src-set\": \"loading\",\n  },\n  loading: {\n    load: \"loaded\",\n    error: \"initial\",\n    \"src-clear\": \"initial\",\n  },\n  loaded: {\n    \"src-set\": \"loading\",\n    \"src-clear\": \"initial\",\n  },\n})\n\n/**\n * Avatar is used for showing a thumbnail representation of a single user or entity.\n * Default avatar illustration is displayed when no src is specified.\n *\n * @status ready\n * @category image\n *\n * @cssprop [--n-avatar-color=var(--n-color-status-highlight)] - Controls the color of the avatar fallback, using [color tokens](/tokens/#color).\n * @cssprop [--n-avatar-size=var(--n-size-icon-l)] - Controls the size of the avatar, using [icon sizing tokens](/tokens/#size).\n * @cssprop [--n-avatar-box-shadow=none] - Controls the box shadow for the avatar.\n * @cssprop [--n-avatar-text-color=var(--n-color-text-on-accent)] - Controls the color of the avatarâ€™s text and icon, using [color tokens](/tokens/#color).\n */\n\n@customElement(\"nord-avatar\")\nexport default class Avatar extends LitElement {\n  static styles = [componentStyle, style]\n\n  @state() private state: States<typeof transition> = \"initial\"\n\n  /**\n   * The size of the avatar.\n   */\n  @property({ reflect: true }) size: \"s\" | \"m\" | \"l\" | \"xl\" | \"xxl\" | \"xxxl\" = \"m\"\n\n  /**\n   * The URL of the avatar image uploaded by the user.\n   */\n  @property({ reflect: true }) src?: string\n\n  /**\n   * The name of the person or entity.\n   */\n  @property({ reflect: true }) name: string = \"\"\n\n  /**\n   * The fallback icon.\n   */\n  @property({ reflect: true }) icon?: string\n\n  /**\n   * The style variant of the avatar.\n   */\n  @property({ reflect: true }) variant: \"default\" | \"square\" = \"default\"\n\n  render() {\n    return html`\n      <div class=\"n-avatar\">\n        ${this.state !== \"initial\" ? this.renderImage() : nothing}\n        ${this.state !== \"loaded\" ? this.renderFallback() : nothing}\n      </div>\n    `\n  }\n\n  @observe(\"src\")\n  protected handleSrcChange() {\n    const event = this.src ? \"src-set\" : \"src-clear\"\n    this.state = transition(this.state, event)\n  }\n\n  protected renderImage() {\n    return this.src\n      ? html`\n          <slot hidden></slot>\n          <img\n            class=\"n-${this.state}\"\n            src=${this.src}\n            @load=${this.handleLoad}\n            @error=${this.handleError}\n            alt=${this.name || \"\"}\n          />\n        `\n      : nothing\n  }\n\n  protected renderFallback() {\n    return html`\n      <nord-visually-hidden>${this.name}</nord-visually-hidden>\n      <div class=\"n-avatar-inner\" aria-hidden=\"true\">\n        <slot></slot>\n      </div>\n      ${this.icon\n        ? html`<nord-icon name=\"${this.icon}\"></nord-icon>`\n        : html`\n            <svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 27 27\">\n              <rect fill=\"var(--_n-avatar-color)\" height=\"27\" rx=\"12\" width=\"27\" x=\"0\" y=\"0\"></rect>\n              <g fill=\"#fff\" opacity=\".7\">\n                <circle cx=\"13.5\" cy=\"30\" r=\"13\"></circle>\n                <circle cx=\"13.5\" cy=\"11\" r=\"5\"></circle>\n              </g>\n            </svg>\n          `}\n    `\n  }\n\n  private handleLoad() {\n    this.state = transition(this.state, \"load\")\n  }\n\n  private handleError() {\n    this.state = transition(this.state, \"error\")\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"nord-avatar\": Avatar\n  }\n}\n"],"names":["transition","fsm","initial","loading","load","error","loaded","Avatar","LitElement","constructor","this","state","size","name","variant","render","html","renderImage","nothing","renderFallback","handleSrcChange","event","src","handleLoad","handleError","icon","styles","componentStyle","style","__decorate","prototype","property","reflect","observe","customElement"],"mappings":"k5FAUMA,WAAEA,GAAeC,EAAI,CACzBC,QAAS,CACP,UAAW,WAEbC,QAAS,CACPC,KAAM,SACNC,MAAO,UACP,YAAa,WAEfC,OAAQ,CACN,UAAW,UACX,YAAa,aAkBF,IAAMC,EAAN,cAAqBC,EAArB,WAAAC,uBAGIC,KAAKC,MAA8B,UAKvBD,KAAIE,KAA4C,IAUhDF,KAAIG,KAAW,GAUfH,KAAOI,QAAyB,SA2D9D,CAzDC,MAAAC,GACE,OAAOC,CAAI,yBAEU,YAAfN,KAAKC,MAAsBD,KAAKO,cAAgBC,KACjC,WAAfR,KAAKC,MAAqBD,KAAKS,iBAAmBD,SAGzD,CAGS,eAAAE,GACR,MAAMC,EAAQX,KAAKY,IAAM,UAAY,YACrCZ,KAAKC,MAAQX,EAAWU,KAAKC,MAAOU,EACrC,CAES,WAAAJ,GACR,OAAOP,KAAKY,IACRN,CAAI,qCAGWN,KAAKC,eACVD,KAAKY,eACHZ,KAAKa,uBACJb,KAAKc,qBACRd,KAAKG,MAAQ,OAGvBK,CACL,CAES,cAAAC,GACR,OAAOH,CAAI,yBACeN,KAAKG,gGAI3BH,KAAKe,KACHT,CAAI,oBAAoBN,KAAKe,qBAC7BT,CAAI,kSAUX,CAEO,UAAAO,GACNb,KAAKC,MAAQX,EAAWU,KAAKC,MAAO,OACrC,CAEO,WAAAa,GACNd,KAAKC,MAAQX,EAAWU,KAAKC,MAAO,QACrC,GArFMJ,EAAAmB,OAAS,CAACC,EAAgBC,GAEhBC,EAAA,CAAhBlB,KAA4DJ,EAAAuB,UAAA,aAAA,GAKhCD,EAAA,CAA5BE,EAAS,CAAEC,SAAS,KAA2DzB,EAAAuB,UAAA,YAAA,GAKnDD,EAAA,CAA5BE,EAAS,CAAEC,SAAS,KAAoBzB,EAAAuB,UAAA,WAAA,GAKZD,EAAA,CAA5BE,EAAS,CAAEC,SAAS,KAAyBzB,EAAAuB,UAAA,YAAA,GAKjBD,EAAA,CAA5BE,EAAS,CAAEC,SAAS,KAAqBzB,EAAAuB,UAAA,YAAA,GAKbD,EAAA,CAA5BE,EAAS,CAAEC,SAAS,KAAiDzB,EAAAuB,UAAA,eAAA,GAY5DD,EAAA,CADTI,EAAQ,QAIR1B,EAAAuB,UAAA,kBAAA,MA3CkBvB,EAAMsB,EAAA,CAD1BK,EAAc,gBACM3B,SAAAA"}