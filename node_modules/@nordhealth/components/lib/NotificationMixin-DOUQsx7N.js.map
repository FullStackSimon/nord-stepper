{"version":3,"file":"NotificationMixin-DOUQsx7N.js","sources":["../src/common/mixins/NotificationMixin.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nimport { LitElement } from \"lit\"\nimport { state } from \"lit/decorators.js\"\nimport type { Ref } from \"lit/directives/ref.js\"\nimport { createRef } from \"lit/directives/ref.js\"\nimport { animation, NordEvent } from \"../events.js\"\n\ntype Constructor<T = Record<string, unknown>> = new (...args: any[]) => T\n\nexport declare class NotificationMixinInterface {\n  protected dismissed: boolean\n  protected notificationRef: Ref<HTMLElement>\n  dismiss(): Promise<void>\n}\n\nexport function NotificationMixin<T extends Constructor<LitElement>>(\n  superClass: T\n): Constructor<NotificationMixinInterface> & T {\n  class NotificationElement extends superClass {\n    protected notificationRef = createRef<HTMLElement>()\n\n    @state() protected dismissed = false\n\n    /**\n     * Programmatically dismiss the notification.\n     * The returned promise resolves when notification's exit animation is complete.\n     */\n    async dismiss() {\n      if (this.notificationRef.value) {\n        this.dismissed = true\n        await animation(this.notificationRef.value)\n        this.dispatchEvent(new NordEvent(\"dismiss\"))\n      }\n    }\n  }\n\n  return NotificationElement as unknown as Constructor<NotificationMixinInterface> & T\n}\n"],"names":["NotificationMixin","superClass","NotificationElement","constructor","this","notificationRef","createRef","dismissed","dismiss","value","animation","dispatchEvent","NordEvent","__decorate","state","prototype"],"mappings":"wLAeM,SAAUA,EACdC,GAEA,MAAMC,UAA4BD,EAAlC,WAAAE,uBACYC,KAAeC,gBAAGC,IAETF,KAASG,WAAG,CAahC,CAPC,aAAMC,GACAJ,KAAKC,gBAAgBI,QACvBL,KAAKG,WAAY,QACXG,EAAUN,KAAKC,gBAAgBI,OACrCL,KAAKO,cAAc,IAAIC,EAAU,YAEpC,EAGH,OAfqBC,EAAA,CAAlBC,KAAmCZ,EAAAa,UAAA,iBAAA,GAe/Bb,CACT"}