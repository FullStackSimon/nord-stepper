import{isServer as t}from"lit";import o from"./en-us.js";import"./localization.js";import"./localization2.js";import"./localization3.js";import"./localization4.js";import"./localization5.js";import"./localization6.js";import"./localization7.js";import"./localization8.js";import"./localization9.js";const n=new Set,i=new Set,e=new Map;if(!t){new MutationObserver((function(){for(const t of n)t()})).observe(document.documentElement,{attributes:!0,attributeFilter:["lang"]})}function a(){e.clear()}function r(...t){t.forEach((t=>{const o=t.$lang.toLowerCase();e.set(o,t)})),function(){for(const t of i)t()}()}function l(t){return n.add(t),()=>n.delete(t)}function c(t){return i.add(t),()=>i.delete(t)}function s(t){return e.has(t)}function u(t){const n=t.toLowerCase(),[i]=n.split("-");return e.get(n)||e.get(i)||o}export{a as clearTranslations,o as fallback,s as isTranslationRegistered,r as registerTranslation,u as resolveTranslation,l as subscribeToDocumentLang,c as subscribeToTranslationRegistration};
//# sourceMappingURL=translation.js.map
