import { LitElement, nothing } from "lit";
import "../visually-hidden/VisuallyHidden.js";
import "../icon/Icon.js";
/**
 * Avatar is used for showing a thumbnail representation of a single user or entity.
 * Default avatar illustration is displayed when no src is specified.
 *
 * @status ready
 * @category image
 *
 * @cssprop [--n-avatar-color=var(--n-color-status-highlight)] - Controls the color of the avatar fallback, using [color tokens](/tokens/#color).
 * @cssprop [--n-avatar-size=var(--n-size-icon-l)] - Controls the size of the avatar, using [icon sizing tokens](/tokens/#size).
 * @cssprop [--n-avatar-box-shadow=none] - Controls the box shadow for the avatar.
 * @cssprop [--n-avatar-text-color=var(--n-color-text-on-accent)] - Controls the color of the avatarâ€™s text and icon, using [color tokens](/tokens/#color).
 */
export default class Avatar extends LitElement {
    static styles: import("lit").CSSResult[];
    private state;
    /**
     * The size of the avatar.
     */
    size: "s" | "m" | "l" | "xl" | "xxl" | "xxxl";
    /**
     * The URL of the avatar image uploaded by the user.
     */
    src?: string;
    /**
     * The name of the person or entity.
     */
    name: string;
    /**
     * The fallback icon.
     */
    icon?: string;
    /**
     * The style variant of the avatar.
     */
    variant: "default" | "square";
    render(): import("lit").TemplateResult<1>;
    protected handleSrcChange(): void;
    protected renderImage(): import("lit").TemplateResult<1> | typeof nothing;
    protected renderFallback(): import("lit").TemplateResult<1>;
    private handleLoad;
    private handleError;
}
declare global {
    interface HTMLElementTagNameMap {
        "nord-avatar": Avatar;
    }
}
