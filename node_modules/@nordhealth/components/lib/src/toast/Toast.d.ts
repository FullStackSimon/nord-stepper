import { LitElement } from "lit";
declare const Toast_base: (new (...args: any[]) => import("../common/mixins/NotificationMixin.js").NotificationMixinInterface) & typeof LitElement;
/**
 * Toasts are non-disruptive messages that appear in the interface
 * to provide quick, at-a-glance feedback on the outcome of an action.
 *
 * @status ready
 * @category feedback
 * @slot - Default slot used for the toast text/message.
 * @fires dismiss - Fired when the toast is dismissed (via user action or auto-dismiss), and its exit animation has completed. This event should be used to remove the dismissed toast from the DOM.
 */
export default class Toast extends Toast_base {
    static styles: import("lit").CSSResult[];
    private timeoutId?;
    /**
     * The style variant of the toast.
     */
    variant: "default" | "danger";
    /**
     * Timeout in milliseconds before the toast is automatically dismissed.
     */
    autoDismiss?: number | undefined;
    disconnectedCallback(): void;
    /**
     * Programmatically dismiss the toast.
     * The returned promise resolves when toast's exit animation is complete.
     */
    dismiss(): Promise<void>;
    render(): import("lit").TemplateResult<1>;
    protected handleAutoDismissChange(): void;
}
declare global {
    interface HTMLElementTagNameMap {
        "nord-toast": Toast;
    }
}
export {};
