import { LitElement } from "lit";
/**
 * Stack component manages layout of immediate children along the
 * vertical or horizontal axis with optional spacing between each child.
 *
 * @status ready
 * @category structure
 * @slot - The stack content.
 *
 * @cssprop [--n-stack-gap=var(--n-space-m)] - Controls the spacing between items, using our [spacing tokens](/tokens/#space).
 */
export default class Stack extends LitElement {
    static styles: import("lit").CSSResult[];
    /**
     * The space injected between components.
     */
    gap: "none" | "xs" | "s" | "m" | "l" | "xl" | "xxl";
    /**
     * The direction of the stack.
     */
    direction: "vertical" | "horizontal";
    /**
     * How to align the child items inside the stack.
     */
    alignItems?: "center" | "start" | "end" | "baseline" | "stretch";
    /**
     * Defines whether the Stack items are forced in a single line
     * or can be flowed into multiple lines.
     */
    wrap: boolean;
    /**
     * How to justify the child items inside the stack.
     */
    justifyContent?: "center" | "start" | "end" | "space-between" | "space-around" | "space-evenly";
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        "nord-stack": Stack;
    }
}
