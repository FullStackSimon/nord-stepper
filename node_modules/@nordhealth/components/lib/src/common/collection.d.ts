/**
 * Groups an array objects by property value
 * @param array the collection of objects to group
 * @param key the property to group by
 * @returns a Map keyed by property value, where values are are an array of objects with that property value.
 */
export declare function groupBy<TObject extends Record<any, any>, TKey extends keyof TObject>(array: Array<TObject>, key: TKey): Map<TObject[TKey], TObject[]>;
/**
 * Split an array into chunks of the given size
 * @param array
 * @param chunkSize
 * @returns
 */
export declare function chunk<T>(array: T[], chunkSize: number): T[][];
/**
 * maps over an array, starting at the given offset and wrapping around.
 * @param array
 * @param startingOffset
 * @param mapFn
 * @returns
 */
export declare function mapWithOffset<T, U>(array: T[], startingOffset: number, mapFn: (item: T, i: number) => U): U[];
