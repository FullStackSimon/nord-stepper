import { ReactiveController, ReactiveElement } from "lit";
export type SwipeDetails = {
    initialX: number;
    initialY: number;
    pageX: number;
    pageY: number;
    distX: number;
    distY: number;
};
type SwipeControllerOptions = {
    target?: () => HTMLElement;
    matchesGesture: (details: SwipeDetails) => boolean;
    onSwipeEnd: (details: SwipeDetails) => void;
};
export declare class SwipeController implements ReactiveController {
    private events;
    private hadFirstUpdate;
    private initialTouchX;
    private initialTouchY;
    private options;
    constructor(host: ReactiveElement, options: SwipeControllerOptions);
    hostUpdated(): void;
    hostDisconnected(): void;
    private handleTouchStart;
    private handleTouchEnd;
}
export declare const isHorizontalSwipe: ({ distX, distY }: SwipeDetails) => boolean;
export declare const isDownwardsSwipe: ({ distX, distY }: SwipeDetails) => boolean;
export {};
