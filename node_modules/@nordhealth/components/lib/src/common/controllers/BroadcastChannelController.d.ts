import { ReactiveController, ReactiveControllerHost } from "lit";
type Options<T> = {
    channelName: string;
    onMessage: (message: T) => void;
    enabled?: () => boolean;
};
export declare class BroadcastChannelController<T> implements ReactiveController {
    private channel?;
    private options;
    constructor(host: ReactiveControllerHost, options: Options<T>);
    hostConnected(): void;
    hostDisconnected(): void;
    handleEvent(event: MessageEvent<T>): void;
    post(message: T): void;
}
export {};
