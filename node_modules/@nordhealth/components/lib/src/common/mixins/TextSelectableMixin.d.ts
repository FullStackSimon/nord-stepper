import { LitElement } from "lit";
import { Ref } from "lit/directives/ref.js";
import { InputMixinInterface } from "./InputMixin.js";
type Constructable<T = Record<string, unknown>> = new (...args: any[]) => T;
export declare class TextSelectableMixinInterface {
    protected textSelectableRef: Ref<HTMLInputElement | HTMLTextAreaElement>;
    set selectionStart(value: number | null);
    get selectionStart(): number | null;
    set selectionEnd(value: number | null);
    get selectionEnd(): number | null;
    select(): void;
    setSelectionRange(start: number | null, end: number | null, direction?: "forward" | "backward" | "none"): void;
    setRangeText(replacement: string, start?: number, end?: number, selectMode?: "select" | "start" | "end" | "preserve"): void;
}
export declare function TextSelectableMixin<T extends Constructable<InputMixinInterface & LitElement>>(superClass: T): Constructable<TextSelectableMixinInterface> & T;
export {};
