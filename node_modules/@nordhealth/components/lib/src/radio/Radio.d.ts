import { LitElement } from "lit";
import { LightDomController } from "../common/controllers/LightDomController.js";
import { LightSlotController } from "../common/controllers/LightSlotController.js";
declare const Radio_base: (new (...args: any[]) => import("../common/mixins/SizeMixin.js").SizeMixinInterface) & (new (...args: any[]) => import("../common/mixins/FormAssociatedMixin.js").FormAssociatedMixinInterface) & (new (...args: any[]) => import("../common/mixins/InputMixin.js").InputMixinInterface) & (new (...args: any[]) => import("../common/mixins/FocusableMixin.js").FocusableMixinInterface) & typeof LitElement;
/**
 * Radio buttons are graphical user interface elements that allow user to choose only one option from
 * a predefined set of mutually exclusive options.
 *
 * @status ready
 * @category form
 * @slot label - Use when a label requires more than plain text.
 * @slot hint - Optional slot that holds hint text for the input.
 * @slot error - Optional slot that holds error text for the input.
 *
 * @cssprop [--n-label-color=var(--n-color-text)] - Controls the text color of the label, using our [color tokens](/tokens/#color).
 */
export default class Radio extends Radio_base {
    static styles: import("lit").CSSResult[];
    protected inputId: string;
    protected hintId: string;
    protected errorId: string;
    /**
     * For accessibility reasons, we render some parts of the component to the light DOM.
     */
    protected hintSlot: LightSlotController;
    protected labelSlot: LightSlotController;
    protected errorSlot: LightSlotController;
    protected inputSlot: LightDomController;
    protected get formValue(): undefined;
    /**
     * Controls whether the checkbox is checked or not.
     */
    checked: boolean;
    render(): import("lit").TemplateResult<1>;
    protected handleCheckedChange(previousChecked: boolean): void;
    private uncheckSiblings;
    protected handleChange(e: Event): void;
    private handleBlur;
    private handleFocus;
}
declare global {
    interface HTMLElementTagNameMap {
        "nord-radio": Radio;
    }
}
export {};
