import { LitElement } from "lit";
/**
 * Cards are shadowed surfaces that display content and actions on a
 * single topic. They should be easy to scan for relevant and
 * actionable information.
 *
 * @status ready
 * @category structure
 * @slot - The card content.
 * @slot header - Optional slot that holds a header for the card.
 * @slot header-end - Optional slot that positions content at the end of the header. Useful for actions or additional info.
 * @slot footer - Optional slot that holds footer content for the card.
 *
 * @cssprop [--n-card-border-radius=var(--n-border-radius)] - Controls how rounded the corners are, using [border radius tokens](/tokens/#border-radius).
 * @cssprop [--n-card-box-shadow=var(--n-box-shadow-popout)] - Controls the surrounding shadow, using [box shadow tokens](/tokens/#box-shadow).
 * @cssprop [--n-card-padding=var(--n-space-m)] - Controls the padding on all sides of the card.
 * @cssprop [--n-card-slot-padding=var(--n-space-m)] - Controls the padding of items slotted within the card. This does not affect the block padding of items slotted into the header.
 */
export default class Card extends LitElement {
    static styles: import("lit").CSSResult[];
    private headerSlot;
    private headerEndSlot;
    private footerSlot;
    /**
     * Controls the padding of the card component. When set to “none”,
     * the header and footer slots will still have padding.
     */
    padding: "m" | "l" | "none";
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        "nord-card": Card;
    }
}
