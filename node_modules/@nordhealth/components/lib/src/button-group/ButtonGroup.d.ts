import { LitElement } from "lit";
/**
 * Button groups are designed to bring together button controls that are of a similar nature. For example text formatting controls.
 *
 * @status ready
 * @category structure
 * @slot - The button group content
 *
 * @cssprop [--n-button-group-border-radius=var(--n-border-radius-s)] - Controls the rounded corners of the button group, using [border radius tokens](/tokens/#border-radius). Only relevant for the default variant.
 * @cssprop [--n-button-group-box-shadow=var(--n-box-shadow)] - Controls the surrounding shadow, using [box shadow tokens](/tokens/#box-shadow). Only relevant for the default variant.
 */
export default class ButtonGroup extends LitElement {
    static styles: import("lit").CSSResult[];
    private defaultSlot;
    private dirController;
    /**
     * The style variant of the button group.
     */
    variant: "default" | "spaced";
    /**
     * The direction of the button group.
     */
    direction: "vertical" | "horizontal";
    /**
     * Defines whether the buttons are forced in a single line
     * or can be flowed into multiple lines (only applied when variant is set to `spaced`).
     */
    wrap: boolean;
    /**
     * The appropriate role for the containing element.
     */
    role: string;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        "nord-button-group": ButtonGroup;
    }
}
