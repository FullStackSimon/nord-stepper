import { LitElement, TemplateResult } from "lit";
declare const Message_base: (new (...args: any[]) => import("../common/mixins/FocusableMixin.js").FocusableMixinInterface) & typeof LitElement;
/**
 * Message represents a specific item within a collection,
 * such as notifications, tasks or conversations. Message
 * can be placed directly inside a dropdown component.
 *
 * @status ready
 * @category action
 * @slot - The message content.
 * @slot footer - Used to place content after the message. Typically used for a timestamp.
 *
 * @cssprop [--n-message-border-color=var(--n-color-border)] - Controls the border color of the message, using our [color tokens](/tokens/#color).
 *
 * @localization unreadLabel - Label for the unread messages.
 */
export default class Message extends Message_base {
    static styles: import("lit").CSSResult[];
    private localize;
    /**
     * The url the message should link to.
     */
    href?: string;
    /**
     * Highlight the message visually. This is meant for highlighting
     * a new message that just appeared. Highlight style should be removed
     * after the user has seen the message and thereâ€™s been a timeout of
     * e.g. 30 seconds.
     */
    highlight?: boolean;
    /**
     * Mark the message as unread. By default messages are read.
     */
    unread?: boolean;
    render(): TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        "nord-message": Message;
    }
}
export {};
