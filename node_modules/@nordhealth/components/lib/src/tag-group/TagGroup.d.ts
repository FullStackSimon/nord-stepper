import { LitElement } from "lit";
/**
 * Tag groups are designed to bring together selectable tags that are of a similar nature. For example categories you can filter by.
 *
 * @status new
 * @category structure
 * @slot - The tag group content
 *
 * @fires {NordEvent} change - Fired whenever a tag has been checked or unchecked via user interaction.
 * @fires {NordEvent} remove - Fired when the remove button is activated on a tag. This event should be used to remove the tag from the DOM.
 *
 * @cssprop [--n-tag-group-border-radius=var(--n-border-radius-s)] - Controls the rounded corners of the tag group, using [border radius tokens](/tokens/#border-radius). Only relevant for the default variant.
 * @cssprop [--n-tag-group-box-shadow=var(--n-box-shadow)] - Controls the surrounding shadow, using [box shadow tokens](/tokens/#box-shadow). Only relevant for the default variant.
 */
export default class TagGroup extends LitElement {
    static styles: import("lit").CSSResult[];
    private defaultSlot;
    private dirController;
    /**
     * The style variant of the tag group.
     */
    variant: "default" | "spaced";
    /**
     * The direction of the tag group.
     */
    direction: "vertical" | "horizontal";
    /**
     * Defines whether the tags are forced in a single line
     * or can be flowed into multiple lines (only applied when variant is set to `spaced`).
     */
    wrap: boolean;
    /**
     * The appropriate role for the containing element.
     */
    role: string;
    render(): import("lit").TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        "nord-tag-group": TagGroup;
    }
}
