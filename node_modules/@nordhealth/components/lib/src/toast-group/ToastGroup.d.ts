import { LitElement } from "lit";
import Toast from "../toast/Toast.js";
type ToastOptions = Partial<Pick<Toast, "variant" | "autoDismiss">>;
/**
 * Toast group is used to position and style a group of toasts, whilst ensuring they are announced by screen readers.
 *
 * @status ready
 * @category feedback
 * @slot - Default slot in which to place toasts.
 *
 * @fires {NordEvent} dismiss - Fired when a toast is dismissed (via user action or auto-dismiss), and its exit animation has completed. This event should be used to remove the dismissed toast from the DOM.
 */
export default class ToastGroup extends LitElement {
    static styles: import("lit").CSSResult[];
    render(): import("lit").TemplateResult<1>;
    /**
     * Convenience method for creating and adding a toast to the group.
     * @param {string} text - The text/message of the toast.
     * @param options - An optional object for configuring the toast's `variant` and `autoDismiss`.
     * @returns {Toast} The toast instance.
     */
    addToast(text: string, options?: ToastOptions): Toast;
}
declare global {
    interface HTMLElementTagNameMap {
        "nord-toast-group": ToastGroup;
    }
}
export {};
